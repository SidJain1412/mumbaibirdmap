(function(){"use strict";var e={7615:function(e,t,a){var s=a(5130),i=a(6768);const o={class:"container"},n={class:"controls"},r=["disabled"],l={ref:"mapContainer",class:"map-container"};function c(e,t,a,s,c,h){const u=(0,i.g2)("v-select"),p=(0,i.g2)("MonthlyPlot"),d=(0,i.g2)("InfoFooter");return(0,i.uX)(),(0,i.CE)("div",o,[t[4]||(t[4]=(0,i.Lk)("header",{class:"header"},[(0,i.Lk)("h1",null,"Mumbai Bird Map"),(0,i.Lk)("p",null,"Explore bird sightings across Mumbai Suburban Area"),(0,i.Lk)("p",{style:{"font-size":"0.8rem"}},[(0,i.eW)("Made with ❤️ by "),(0,i.Lk)("a",{href:"https://www.instagram.com/__sidjain__/",target:"_blank",rel:"noopener"},"Siddharth Jain"),(0,i.eW)(" with eBird Data")])],-1)),(0,i.Lk)("div",n,[(0,i.bF)(u,{modelValue:c.selectedSpecies,"onUpdate:modelValue":t[0]||(t[0]=e=>c.selectedSpecies=e),options:c.speciesList,searchable:!0,disabled:!c.speciesList.length,placeholder:"Select or search for a bird species",class:"species-select"},null,8,["modelValue","options","disabled"]),(0,i.bF)(u,{modelValue:c.selectedMonth,"onUpdate:modelValue":t[1]||(t[1]=e=>c.selectedMonth=e),options:c.months,searchable:!1,disabled:!c.months.length,placeholder:"All Months",class:"month-select"},null,8,["modelValue","options","disabled"]),(0,i.Lk)("button",{onClick:t[2]||(t[2]=(...e)=>h.loadLocationData&&h.loadLocationData(...e)),disabled:!c.selectedSpecies,class:"load-button"}," Show Locations ",8,r),(0,i.Lk)("button",{onClick:t[3]||(t[3]=(...e)=>h.surpriseMe&&h.surpriseMe(...e)),class:"surprise-button"}," Random Species! ")]),c.monthlyData.length?((0,i.uX)(),(0,i.Wv)(p,{key:0,"monthly-data":c.monthlyData,class:"monthly-plot"},null,8,["monthly-data"])):(0,i.Q3)("",!0),(0,i.Lk)("div",l,null,512),(0,i.bF)(d)])}a(4114);var h=a(6886),u=a.n(h);a(5710),a(954);const p={class:"chart-container"};function d(e,t,a,s,o,n){const r=(0,i.g2)("Bar");return(0,i.uX)(),(0,i.CE)("div",p,[n.chartData?((0,i.uX)(),(0,i.Wv)(r,{key:0,data:n.chartData,options:n.chartOptions},null,8,["data","options"])):(0,i.Q3)("",!0)])}var m=a(1010),f=a(6912);f.t1.register(f.hE,f.m_,f.s$,f.E8,f.PP,f.kc);var y={name:"MonthlyPlot",components:{Bar:m.yP},props:{monthlyData:{type:Array,required:!0}},computed:{chartData(){return{labels:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],datasets:[{label:"Observations",data:this.monthlyData,backgroundColor:"#4caf50",borderRadius:5}]}},chartOptions(){return{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},tooltip:{backgroundColor:"rgba(255, 255, 255, 0.95)",titleColor:"#0f172a",bodyColor:"#0f172a",bodyFont:{family:"Inter"},borderColor:"#e2e8f0",borderWidth:1,padding:10,cornerRadius:8,callbacks:{label:function(e){return`${e.formattedValue} Observations`}}}},scales:{y:{beginAtZero:!0,grid:{color:"#f1f5f9"},ticks:{callback:function(e){return e},font:{size:10,family:"Inter"},color:"#64748b"}},x:{grid:{display:!1},ticks:{font:{size:10,family:"Inter"},color:"#64748b"}}}}}}},b=a(1241);const g=(0,b.A)(y,[["render",d],["__scopeId","data-v-78f1ac20"]]);var v=g;const L={class:"info-footer"};function _(e,t){return(0,i.uX)(),(0,i.CE)("div",L,t[0]||(t[0]=[(0,i.Fv)('<div class="info-content" data-v-69e82671><h3 data-v-69e82671>About this Map</h3><p data-v-69e82671>This map uses bird observation data from <a href="https://ebird.org" target="_blank" rel="noopener" data-v-69e82671>eBird</a>, covering the period from January 2019 to January 2024, for the region Mumbai Suburban, India.</p><h4 data-v-69e82671>Methodology</h4><p data-v-69e82671>Data points are aggregated into small geographic cells to create both the heatmap and cluster views. The intensity of the heatmap represents the number of observations in each area. Monthly patterns are displayed in the bar chart above to show seasonal variations in sightings.</p><p class="attribution" data-v-69e82671>Built by <a href="https://github.com/sidjain1412" target="_blank" rel="noopener" data-v-69e82671>Siddharth Jain</a>. DM me on my <a href="https://www.instagram.com/__sidjain__/" target="_blank" rel="noopener" data-v-69e82671>Instagram</a> if you have any feedback/ ideas!</p><p data-v-69e82671>Data courtesy of eBird, a project of the Cornell Lab of Ornithology. This website is strictly non-commercial and only for information.</p><p data-v-69e82671>Data citation: eBird Basic Dataset. Version: EBD_relSep-2024. Cornell Lab of Ornithology, Ithaca, New York. Sep 2024.</p><p data-v-69e82671><b data-v-69e82671>Please use this information responsibly. </b>Latest information will not be included to prevent unethical use of the data.</p></div>',1)]))}const k={},M=(0,b.A)(k,[["render",_],["__scopeId","data-v-69e82671"]]);var w=M,C=a(9643),D={name:"SpeciesMap",components:{MonthlyPlot:v,InfoFooter:w},data(){return{selectedSpecies:"",selectedMonth:{value:null,label:"All Months"},months:[{value:null,label:"All Months"},{value:1,label:"January"},{value:2,label:"February"},{value:3,label:"March"},{value:4,label:"April"},{value:5,label:"May"},{value:6,label:"June"},{value:7,label:"July"},{value:8,label:"August"},{value:9,label:"September"},{value:10,label:"October"},{value:11,label:"November"},{value:12,label:"December"}],speciesList:[],map:null,markerCluster:null,heatLayer:null,isDestroying:!1,mapConfig:{center:[19.1433,72.879],zoom:11,tileLayer:{url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",options:{maxZoom:19,attribution:"© OpenStreetMap contributors"}}},monthlyData:[],speciesCache:{},isLoading:!1}},async created(){if(await this.fetchSpeciesList(),this.speciesList.length>0){const e=Math.floor(Math.random()*this.speciesList.length/4);this.selectedSpecies=this.speciesList[e].value,this.selectedMonth={value:null,label:"All Months"}}},async mounted(){document.title="Mumbai Bird Map",C.Ay.capture("app_loaded",{category:"Page View",user_action:"page_load",species_count:this.speciesList.length});try{await this.initializeMap(),this.selectedSpecies&&!this.isDestroying&&await this.loadLocationData()}catch(e){console.error("Failed to initialize map:",e),C.Ay.capture("map_initialization_error",{category:"Error",error_message:e.message,user_action:"initialize_map"})}},beforeUnmount(){this.cleanup()},watch:{selectedSpecies(e){e&&!this.isDestroying&&(this.loadLocationData(),C.Ay.capture("species_selected",{species_name:e,category:"Species Selection",user_action:"select_species"}))},selectedMonth(e){this.selectedSpecies&&e&&null!==e.value&&!this.isDestroying&&(this.loadLocationData(),C.Ay.capture("month_filtered",{month:e.label,month_value:e.value,species:this.selectedSpecies,category:"Month Filter",user_action:"filter_month"}))}},methods:{cleanup(){this.isDestroying=!0,this.heatLayer&&(this.map.removeLayer(this.heatLayer),this.heatLayer=null),this.markerCluster&&(this.markerCluster.clearLayers(),this.map.removeLayer(this.markerCluster),this.markerCluster=null),this.map&&(this.map.remove(),this.map=null)},async initializeMap(){if(!this.map&&!this.isDestroying){if(await this.$nextTick(),!this.$refs.mapContainer||this.isDestroying)throw new Error("Map container not found or component is being destroyed");this.map=u().map(this.$refs.mapContainer,{fadeAnimation:!0,zoomAnimation:!0,markerZoomAnimation:!1}).setView(this.mapConfig.center,this.mapConfig.zoom),u().tileLayer(this.mapConfig.tileLayer.url,this.mapConfig.tileLayer.options).addTo(this.map),this.markerCluster=u().markerClusterGroup({iconCreateFunction:e=>{const t=e.getAllChildMarkers().reduce(((e,t)=>e+(t.options.count||0)),0);return u().divIcon({html:`<span>${t}</span>`,className:"mycluster",iconSize:u().point(40,40)})},maxClusterRadius:50,spiderfyOnMaxZoom:!0,zoomToBoundsOnClick:!0,chunkedLoading:!0,animate:!1,animateAddingMarkers:!1}),this.isDestroying||this.map.addLayer(this.markerCluster)}},async fetchSpeciesList(){try{const e=await fetch("data/species-list.json");if(!e.ok)throw new Error("Failed to fetch species list");const t=await e.json();this.speciesList=t.map((e=>({value:e.name,label:`${e.name} (Rarity Rank: ${e.rank})`})))}catch(e){console.error("Error fetching species list:",e)}},async loadLocationData(){if(this.selectedSpecies){this.isLoading=!0;try{const e=await this.getSpeciesData(this.selectedSpecies);let t=[];t="object"===typeof this.selectedMonth?Object.values(e).flat():e[this.selectedMonth]||[],this.monthlyData=Array(12).fill(0).map(((t,a)=>{const s=a+1,i=e[s]||[];return i.reduce(((e,t)=>e+t.count),0)})),await this.updateMap(t),C.Ay.capture("location_data_loaded",{species_name:this.selectedSpecies,month_filter:this.selectedMonth?.label||"All Months",location_count:t.length,total_observations:t.reduce(((e,t)=>e+t.count),0),category:"Data Interaction",user_action:"load_map_data"})}catch(e){console.error("Error loading location data:",e),C.Ay.capture("location_data_error",{species_name:this.selectedSpecies,error_message:e.message,category:"Error",user_action:"load_map_data"})}finally{this.isLoading=!1}}},async getSpeciesData(e){if(this.speciesCache[e])return this.speciesCache[e];const t=e.toLowerCase().replaceAll(" ","-"),a=await fetch(`data/species/${t}.json`);if(!a.ok)throw new Error(`Failed to fetch data for ${e}`);const s=await a.json();return this.speciesCache[e]=s,s},async updateMap(e){if(this.isDestroying)return;this.markerCluster&&this.markerCluster.clearLayers(),this.heatLayer&&this.map.hasLayer(this.heatLayer)&&(this.map.removeLayer(this.heatLayer),this.heatLayer=null);const t=[],a=u().latLngBounds();e.forEach((({lat:e,lng:s,count:i})=>{if(this.isDestroying)return;const o=[e,s],n=u().marker(o,{count:i,animate:!1});n.bindPopup(`Count: ${i}`),this.markerCluster&&!this.isDestroying&&this.markerCluster.addLayer(n),t.push([e,s,Math.min(i,30)]),a.extend(o)})),this.isDestroying||t.length>0&&this.map&&(this.heatLayer=u().heatLayer(t,{radius:25,blur:15,maxZoom:10,max:30,gradient:{.4:"blue",.6:"cyan",.8:"lime",.9:"yellow",1:"red"}}),this.isDestroying||(this.map.addLayer(this.heatLayer),this.map.fitBounds(a,{padding:[50,50],animate:!1})))},surpriseMe(){if(this.speciesList.length>0){const e=Math.floor(Math.random()*this.speciesList.length),t=this.speciesList[e].value;this.selectedSpecies=t,C.Ay.capture("random_species_clicked",{species_name:t,category:"User Engagement",user_action:"surprise_me",species_count:this.speciesList.length})}}}};const A=(0,b.A)(D,[["render",c]]);var S=A,O=a(4014);function E(){return C.Ay.init("phc_i9aBKuziBsVefI47vNZp1BJEqjXlLaw4qjfmHOV0CPc",{api_host:"https://us.i.posthog.com",defaults:"2025-05-24",person_profiles:"always"}),{posthog:C.Ay}}E();const j=(0,s.Ef)(S);j.component("v-select",O.A),j.mount("#app")}},t={};function a(s){var i=t[s];if(void 0!==i)return i.exports;var o=t[s]={exports:{}};return e[s].call(o.exports,o,o.exports,a),o.exports}a.m=e,function(){var e=[];a.O=function(t,s,i,o){if(!s){var n=1/0;for(h=0;h<e.length;h++){s=e[h][0],i=e[h][1],o=e[h][2];for(var r=!0,l=0;l<s.length;l++)(!1&o||n>=o)&&Object.keys(a.O).every((function(e){return a.O[e](s[l])}))?s.splice(l--,1):(r=!1,o<n&&(n=o));if(r){e.splice(h--,1);var c=i();void 0!==c&&(t=c)}}return t}o=o||0;for(var h=e.length;h>0&&e[h-1][2]>o;h--)e[h]=e[h-1];e[h]=[s,i,o]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var s in t)a.o(t,s)&&!a.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={524:0};a.O.j=function(t){return 0===e[t]};var t=function(t,s){var i,o,n=s[0],r=s[1],l=s[2],c=0;if(n.some((function(t){return 0!==e[t]}))){for(i in r)a.o(r,i)&&(a.m[i]=r[i]);if(l)var h=l(a)}for(t&&t(s);c<n.length;c++)o=n[c],a.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return a.O(h)},s=self["webpackChunkfrontend"]=self["webpackChunkfrontend"]||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))}();var s=a.O(void 0,[504],(function(){return a(7615)}));s=a.O(s)})();
//# sourceMappingURL=app.0d6ced9d.js.map